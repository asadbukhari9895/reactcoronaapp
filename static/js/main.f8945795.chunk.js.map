{"version":3,"sources":["components/Chart/Chart.module.css","components/CountryPicker/CountryPicker.module.css","components/Cards/Card.module.css","components/Cards/Cards.jsx","api/index.js","components/Chart/Chart.jsx","components/CountryPicker/CountryPicker.jsx","images/image.png","App.js","index.js","App.module.css"],"names":["module","exports","Cards","data","confirmed","recovered","deaths","lastUpdate","className","styles","container","Grid","spacing","justify","item","component","Card","xs","md","cx","card","infected","CardContent","Typography","color","gutterBottom","varient","start","end","value","duration","separator","Date","toDateString","url","fetchData","country","a","updatedUrl","axios","get","console","log","fetchDailyData","modifiedData","map","dailyData","total","date","reportDate","fetchCountries","countries","name","Chart","useState","setDailyData","useEffect","fetchAPI","lineChart","length","labels","datasets","label","borderColor","fill","backgroundColor","barChart","conatiner","CountryPicker","handleCountrychange","fetchedCountries","setFetchedCountries","FormControl","formControl","NativeSelect","defaultValue","onChange","e","target","i","App","state","fetchedData","setState","this","image","src","coronaImage","alt","React","Component","reactDom","render","document","getElementById"],"mappings":"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","file":"static/js/main.f8945795.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"conatiner\":\"Chart_conatiner__tN3d8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"CountryPicker_formControl__3z8GM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Card_container__17miJ\",\"card\":\"Card_card__3JjH7\",\"infected\":\"Card_infected__HP6Un\",\"recovered\":\"Card_recovered__31YU8\",\"deaths\":\"Card_deaths__Ri1IV\"};","\r\nimport React from 'react';\r\nimport styles from \"./Card.module.css\";\r\nimport CountUp from 'react-countup';\r\nimport cx from \"classnames\"\r\nimport { Card, CardContent, Typography, Grid } from '@material-ui/core';\r\n\r\nconst Cards = ({ data: { confirmed, recovered, deaths, lastUpdate } }) => {\r\n    if (!confirmed) {\r\n        return \"Loading....\";\r\n    }\r\n    return (\r\n        <div className={styles.container}>\r\n            <Grid container spacing={3} justify=\"center\">\r\n                <Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.infected)}>\r\n                    <CardContent>\r\n                        <Typography color=\"textSecondary\" gutterBottom>INFECTED</Typography>\r\n                        <Typography varient=\"h5\">\r\n                            <CountUp start={0} end={confirmed.value} duration={2.5} separator=\",\" />\r\n                        </Typography>\r\n                        <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\r\n                        <Typography varient=\"body2\">Number of active cases of COVID-19</Typography>\r\n                    </CardContent>\r\n                </Grid>\r\n\r\n                <Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.recovered)}>\r\n                    <CardContent>\r\n                        <Typography color=\"textSecondary\" gutterBottom>RECOVERED</Typography>\r\n                        <Typography varient=\"h5\">\r\n                            <CountUp start={0} end={recovered.value} duration={2.5} separator=\",\" />\r\n                        </Typography>\r\n                        <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\r\n                        <Typography varient=\"body2\">Number of recoveries from COVID-19</Typography>\r\n                    </CardContent>\r\n                </Grid>\r\n\r\n                <Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.deaths)}>\r\n                    <CardContent>\r\n                        <Typography color=\"textSecondary\" gutterBottom>DEATHS</Typography>\r\n                        <Typography varient=\"h5\">\r\n                            <CountUp start={0} end={deaths.value} duration={2.5} separator=\",\" />\r\n                        </Typography>\r\n                        <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\r\n                        <Typography varient=\"body2\">Number of deaths caused by COVID-19</Typography>\r\n                    </CardContent>\r\n                </Grid>\r\n            </Grid>\r\n        </div >\r\n    )\r\n}\r\n\r\nexport default Cards","import axios from 'axios';\r\n\r\nconst url = 'https://covid19.mathdro.id/api';\r\n\r\nexport const fetchData = async (country) => {\r\n    let updatedUrl = url;\r\n\r\n    if (country) {\r\n        updatedUrl = `${url}/countries/${country}`\r\n    }\r\n    try {\r\n        const { data: { confirmed, recovered, deaths, lastUpdate } } = await axios.get(updatedUrl);\r\n        return { confirmed, recovered, deaths, lastUpdate };\r\n    } catch (error) {\r\n        console.log(\"error\");\r\n    }\r\n}\r\n\r\nexport const fetchDailyData = async () => {\r\n    try {\r\n        const { data } = await axios.get(`${url}/daily`);\r\n\r\n        const modifiedData = data.map((dailyData) => ({\r\n            confirmed: dailyData.confirmed.total,\r\n            deaths: dailyData.deaths.total,\r\n            date: dailyData.reportDate,\r\n        }));\r\n\r\n        return modifiedData\r\n    } catch (error) {\r\n        console.log(\"error\");\r\n    }\r\n}\r\n\r\nexport const fetchCountries = async () => {\r\n    try {\r\n        const { data: { countries } } = await axios.get(`${url}/countries`);\r\n        return countries.map((country) => country.name);\r\n    } catch (error) {\r\n        console.log(\"error\");\r\n    }\r\n}","import React, { useState, useEffect } from 'react'\r\nimport { fetchDailyData } from '../../api'\r\nimport { Line, Bar } from 'react-chartjs-2'\r\nimport styles from './Chart.module.css'\r\n\r\nconst Chart = ({ data: { confirmed, deaths, recovered }, country }) => {\r\n    const [dailyData, setDailyData] = useState([]);\r\n\r\n    useEffect(() => {\r\n        const fetchAPI = async () => {\r\n            setDailyData(await fetchDailyData());\r\n        }\r\n\r\n        fetchAPI();\r\n    }, [setDailyData]);\r\n\r\n    const lineChart = (\r\n        dailyData.length\r\n            ? (\r\n                <Line\r\n                    data={{\r\n                        labels: dailyData.map(({ date }) => date),\r\n\r\n                        datasets: [{\r\n                            data: dailyData.map(({ confirmed }) => confirmed),\r\n                            label: 'Infected',\r\n                            borderColor: '#3333ff',\r\n                            fill: true,\r\n                        }, {\r\n                            data: dailyData.map(({ deaths }) => deaths),\r\n                            label: 'Deaths',\r\n                            borderColor: 'red',\r\n                            backgroundColor: 'rgba(255,0,0,0.5)',\r\n                            fill: true,\r\n                        }],\r\n\r\n                    }}\r\n\r\n                />\r\n            ) : null\r\n    )\r\n\r\n    const barChart = (\r\n        confirmed\r\n            ? (\r\n                <Bar\r\n                    data={{\r\n                        labels: ['Infected', 'recovered', 'Deaths'],\r\n                        datasets: [{\r\n                            label: 'People',\r\n                            backgroundColor: [\r\n                                'rgba(0,0,255,0.5)',\r\n                                'rgba(0,255,0,0.5)',\r\n                                'rgba(255,0,0,0.5)',\r\n                            ],\r\n                            data: [confirmed.value, recovered.value, deaths.value]\r\n                        }]\r\n                    }}\r\n                />\r\n            ) : null\r\n    )\r\n\r\n    return (\r\n        <div className={styles.conatiner}>\r\n            {country ? barChart : lineChart}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Chart","import React, { useState, useEffect } from 'react';\r\nimport { NativeSelect, FormControl } from '@material-ui/core';\r\nimport styles from \"./CountryPicker.module.css\"\r\n\r\nimport { fetchCountries } from '../../api';\r\n\r\nconst CountryPicker = ({ handleCountrychange }) => {\r\n\r\n    const [fetchedCountries, setFetchedCountries] = useState([]);\r\n\r\n    useEffect(() => {\r\n        const fetchAPI = async () => {\r\n            setFetchedCountries(await fetchCountries())\r\n        }\r\n\r\n        fetchAPI();\r\n    }, [setFetchedCountries]);\r\n\r\n\r\n\r\n    return (\r\n        <FormControl className={styles.formControl}>\r\n            <NativeSelect defaultValue=\"\" onChange={(e) => { handleCountrychange(e.target.value) }}>\r\n                <option value=\"\">Global</option>\r\n                {fetchedCountries.map((country, i) => <option key={i} value={country}>{country}</option>)}\r\n            </NativeSelect>\r\n        </FormControl>\r\n    )\r\n}\r\n\r\nexport default CountryPicker","export default __webpack_public_path__ + \"static/media/image.9e5d4fc7.png\";","import React from \"react\";\r\n\r\nimport { Cards, Chart, CountryPicker } from './components';\r\nimport styles from './App.module.css';\r\nimport { fetchData } from './api';\r\nimport coronaImage from './images/image.png'\r\n\r\nclass App extends React.Component {\r\n    state = {\r\n        data: {},\r\n        country: \"\",\r\n    }\r\n\r\n    async componentDidMount() {\r\n        const fetchedData = await fetchData();\r\n        this.setState({ data: fetchedData });\r\n    };\r\n\r\n    handleCountrychange = async (country) => {\r\n        const fetchedData = await fetchData(country);\r\n        this.setState({ data: fetchedData, country: country });\r\n    }\r\n\r\n    render() {\r\n        const { data, country } = this.state;\r\n        return (\r\n            <div className={styles.container}>\r\n                <img className={styles.image} src={coronaImage} alt=\"corona image\" />\r\n                <Cards data={data} />\r\n                <CountryPicker handleCountrychange={this.handleCountrychange} />\r\n                <Chart data={data} country={country} />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default App","import React from \"react\";\r\nimport reactDom from \"react-dom\";\r\n\r\nimport App from './App';\r\n\r\nreactDom.render(<App />, document.getElementById('root'));","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__3GW7F\",\"image\":\"App_image__1wD8K\"};"],"sourceRoot":""}